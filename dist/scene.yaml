#Getting the indentation right is SUPER IMPORTANT to make this work!
#styles for Tangram map
import:
    - https://www.nextzen.org/carto/refill-style/refill-style.zip
    - https://s3.amazonaws.com/xyz-demo/data/demo.yaml
    - https://www.nextzen.org/carto/refill-style/themes/label-5.zip

#The data sources uploaded earlier to HERE xyz
#Will be loaded on top of base Tangram map
sources:
    stateBorders:
        #Tiled endpoint to the data source on HERE xyz
        url: https://xyz.api.here.com/hub/spaces/GSedoX3G/tile/web/{z}_{x}_{y}
        url_params:
            access_token: ANOkxlf9QMWB72jUxUuT7AA
            clip: true
        type: GeoJSON
    districtBorders:
        #Tiled endpoint to the data source on HERE xyz
        url: https://xyz.api.here.com/hub/spaces/sYm0uuVK/tile/web/{z}_{x}_{y}
        url_params:
            access_token: ANOkxlf9QMWB72jUxUuT7AA
            clip: true
        type: GeoJSON
    publicClinicLocations:
        #Tiled endpoint to the data source on HERE xyz
        url: https://xyz.api.here.com/hub/spaces/CnsQWqCa/tile/web/{z}_{x}_{y}
        url_params:
            access_token: ANOkxlf9QMWB72jUxUuT7AA
            clip: true
        type: GeoJSON
    solar:
        #Tiled endpoint to the data source on HERE xyz
        url: https://xyz.api.here.com/hub/spaces/1P7lZgXJ/tile/web/{z}_{x}_{y}
        url_params:
            access_token: ANOkxlf9QMWB72jUxUuT7AA
            clip: true
        type: GeoJSON
    neighborhoods:
        url: https://xyz.api.here.com/hub/spaces/u3NTM6aJ/tile/web/{z}_{x}_{y}
        url_params:
            access_token: ANOkxlf9QMWB72jUxUuT7AA
            clip: true
        type: GeoJSON
    trees:
        url: https://xyz.api.here.com/hub/spaces/PZC7gnLE/tile/web/{z}_{x}_{y}
        url_params:
            access_token: ANOkxlf9QMWB72jUxUuT7AA
            clip: true
        type: GeoJSON

# Styles the polygons of the chloropleth
styles:
    _polygons_inlay:
        base: polygons
        blend: inlay
        blend_order: 1
textures:
    icons: 
        url: clinicIconResized.PNG #1 image of many icons in a long strip
        filtering: mipmap #cuts out images at specified positions
        sprites:  # define sprite's: [x origin, y origin, width, height]. Default unit is px.
            clinic: [0, 0, 32, 32]
            

layers:
    _stateBorders:
        enabled: true
        data: {source: stateBorders}
        draw:
            polygons:
                interactive: true
                order: global.sdk_order_under_water_0
            lines:
                interactive: false
                order: global.sdk_order_under_roads_0
                color: green
                width: 5px
    _districtBorders:
        enabled: true
        data: {source: districtBorders}
        draw:
            polygons:
                interactive: true
                order: global.sdk_order_under_water_0
            lines:
                interactive: false
                order: global.sdk_order_under_roads_0
                color: blue
                width: 3px
    _publicClinicLocations:
        #Eyyy, replaced with icons!
        data: {source: publicClinicLocations}
        enabled: true
        _all:
            draw:
                points:
                    collide: false #MUST to prevent nearby features from being burried!
                    placement: spaced
                    placement_spacing: [[17, 70px], [20, 175px]]
                    interactive: true #Must for popups to occur
                    texture: icons
                    sprite: clinic
                    #Stops at zoom x, 1D size px. 
                    #For square icons, 1D becomes 2D. If 6px specified, sprite has sides of 6px each  
                    #size: [[6, [auto, 10px]], [12, [auto,20px]], [20, [auto,60px]]]
                    size: [[6, 10px], [12, 20px], [20, 60px]]
                    
                    
    #Instructs Tangram to draw data in the 'solar' source
    _solar:
        #Eyyy, replaced with icons!
        data: {source: solar}
        enabled: false
        _all:
            draw:
                points:
                    collide: false

                    texture: icons
                    sprite: clinic
                    size: [[17, 18px], [18, 20px], [20, 32px]]
                    placement: spaced
                    placement_spacing: [[17, 70px], [20, 175px]]
    _neighborhoods:
        enabled: true
        data: {source: neighborhoods}
        draw:
            polygons:
                interactive: true
                order: global.sdk_order_under_water_0
                color: |
                    function() {
                        var value = feature.totalPower;
                        //Colour gradient ranges from gray (lowest power) to red (mid power) to brown (highest power)
                        var color = value >= 1267538 ? "rgba(127, 0, 0, 0.5)" :
                                    value >= 1140784.2 ? "rgba(167, 4, 3, 0.5)" :
                                    value >= 1014030.4 ? "rgba(200, 29, 19, 0.5)" :
                                    value >= 887276.6 ? "rgba(224, 69, 48, 0.5)" :
                                    value >= 760522.8 ? "rgba(241, 108, 73, 0.5)" :
                                    value >= 633769 ? "rgba(250, 142, 93, 0.5)" :
                                    value >= 507015.2 ? "rgba(253, 176, 122, 0.5)" :
                                    value >= 380261.4 ? "rgba(253, 202, 148, 0.5)" :
                                    value >= 253507.6 ? "rgba(253, 220, 175, 0.5)" :
                                    value >= 126753.8 ? "rgba(254, 235, 207, 0.5)" :
                                    "rgba(255, 247, 236, 0.3)";
                        return color
                    }
            lines:
                interactive: true
                order: global.sdk_order_under_roads_0
                color: black
                width: 3px
    _trees:
        enabled: false
        data: {source: trees}
        draw:
            points:
                collide: false
                color: '#00A000'
                size: |
                    # Diameter of each tree point scales by tree trunk diameter
                    function() {
                        var value = feature.Stamdiameter;
                        var size =  value == "0 - 10 cm" ? 1.5 :
                                    value == "11 - 20 cm" ? 2 :
                                    value == "21 - 30 cm" ? 2.5 :
                                    value == "31 - 50 cm" ? 3.25 :
                                    value == "51 - 75 cm" ? 4 :
                                    value == "76 - 100 cm" ? 5 :
                                    1.5;
                        //Sets dots to scale with zoom level
                        if ($zoom > 13) {
                            return Math.pow(1.5, $zoom - 13) * size;
                        }

                        return size;
                    }



